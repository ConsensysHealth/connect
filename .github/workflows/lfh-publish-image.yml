# (C) Copyright IBM Corp. 2020
# SPDX-License-Identifier: Apache-2.0

name: Linux for Health Publish Image to Registry
# Publishes linuxforhealth/connect snapshot and release images.
# Snapshot images are pushed when commits are made against master.
# Release images are pushed with a GitHub release tag is created an published.

on:
  push:
    branches: [master]
  release:
    types: [published]
jobs:
  generate_image_tags:
    name: Generates Image Tags
    runs-on: ubuntu-latest
    steps:
      - name: Checkout LFH Project
        uses: actions/checkout@v2
      - name: Generate Image Tags
        run: ./github/workflows/generate-image-tag.sh
        env:
          IMAGE_REPO_NAME: "linuxforhealth/connect"
          GITHUB_EVENT_NAME: ${{ env.GITHUB_EVENT_NAME }}
          GITHUB_REF: ${{ env.GITHUB_REF }}

#  build_lfh:
#    name: Build LFH Connect Application
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout LFH Project
#        uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Cache Gradle packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build with Gradle (skip tests)
#        run: ./gradlew build -x test
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
